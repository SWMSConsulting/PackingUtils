import matplotlib.pyplot as plt

from io import BytesIO
from fastapi import FastAPI, responses, Request
from fastapi.openapi.docs import get_swagger_ui_html

from v1.models.bin_image_request_model import BinImageRequestModel

from packutils.visual.packing_visualization import PackingVisualization
from packutils.data.single_item import SingleItem
from packutils.data.position import Position
from packutils.data.bin import Bin

import matplotlib

matplotlib.use("Agg")


api_v1 = FastAPI()


@api_v1.get("/")
async def status():
    return {"status": "Healthy"}


@api_v1.post(
    "/bin",
    # Set what the media type will be in the autogenerated OpenAPI specification.
    # fastapi.tiangolo.com/advanced/additional-responses/#additional-media-types-for-the-main-response
    responses={200: {"content": {"image/png": {}}}},
    # Prevent FastAPI from adding "application/json" as an additional
    # response media type in the autogenerated OpenAPI specification.
    # https://github.com/tiangolo/fastapi/issues/3258
    response_class=responses.Response,
)
def get_bin_image(request: BinImageRequestModel):
    vis = PackingVisualization()

    bin = Bin(
        width=request.colli_details.width,
        length=request.colli_details.length,
        height=request.colli_details.height,
        stability_factor=0.7,
        overhang_y_stability_factor=0.55,
    )

    items_with_positions = [
        (
            SingleItem(identifier="", width=p.width, length=p.length, height=p.height),
            Position(x=p.x, y=p.y, z=p.z),
        )
        for p in request.packages
    ]
    done, errors = bin.pack_items(items_with_positions)

    if done and len(request.packages) != len(bin.packed_items):
        errors = ["Failed to pack all items"]

    if errors is not None and len(errors) > 0:
        return responses.JSONResponse(status_code=422, content={"errors": errors})

    image = vis.visualize_bin(
        bin, perspective=request.perspective, show=False, return_png=False
    )

    # convert the image into bytes
    buffer = BytesIO()
    image.savefig(buffer, format="png")
    plt.close()
    buffer.seek(0)
    return responses.StreamingResponse(buffer, media_type="image/png")


@api_v1.get("/docs", include_in_schema=False)
async def custom_swagger_ui_html(req: Request):
    root_path = req.scope.get("root_path", "").rstrip("/")
    openapi_url = root_path + api_v1.openapi_url
    return get_swagger_ui_html(
        openapi_url=openapi_url,
        title="API",
    )
